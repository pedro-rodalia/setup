# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
'.source.js':
  'Test Skeleton':
    'prefix': 'spec'
    'body': '''
      import Vue from 'vue'
      import { shallowMount, createLocalVue } from '@vue/test-utils'
      import ${1:Component} from './${1:Component}'

      const localVue = createLocalVue()

      describe('${1:Component} test suite', () => {
        ${0}
      })
    '''
  'Describe':
    'prefix': 'desc'
    'body': '''
      describe('${1:property/event} | ${2:when}', () => {
        ${0}
      })
    '''
  'Describe Prop':
    'prefix': 'desc-prop'
    'body': '''
      describe(':${1:property} | ${2:when}', () => {
        ${0}
      })
    '''
  'Describe Event':
    'prefix': 'desc-event'
    'body': '''
      describe('@${1:event} | ${2:when}', () => {
        ${0}
      })
    '''
  'Test':
    'prefix': 'test'
    'body': '''
      test('${1:behaviour}', () => {
        ${0}
      })
    '''
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
